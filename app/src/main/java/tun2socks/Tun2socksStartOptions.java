// Code generated by gobind. DO NOT EDIT.

// Java class tun2socks.Tun2socksStartOptions is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java AndrProxy/tun2socks
package tun2socks;

import go.Seq;

public final class Tun2socksStartOptions implements Seq.Proxy {
	static { Tun2socks.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	Tun2socksStartOptions(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public Tun2socksStartOptions() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native long getTunFd();
	public final native void setTunFd(long v);
	
	public final native String getSocks5Server();
	public final native void setSocks5Server(String v);
	
	public final native String getFakeIPRange();
	public final native void setFakeIPRange(String v);
	
	public final native long getMTU();
	public final native void setMTU(long v);
	
	public final native boolean getEnableIPv6();
	public final native void setEnableIPv6(boolean v);
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof Tun2socksStartOptions)) {
		    return false;
		}
		Tun2socksStartOptions that = (Tun2socksStartOptions)o;
		long thisTunFd = getTunFd();
		long thatTunFd = that.getTunFd();
		if (thisTunFd != thatTunFd) {
		    return false;
		}
		String thisSocks5Server = getSocks5Server();
		String thatSocks5Server = that.getSocks5Server();
		if (thisSocks5Server == null) {
			if (thatSocks5Server != null) {
			    return false;
			}
		} else if (!thisSocks5Server.equals(thatSocks5Server)) {
		    return false;
		}
		String thisFakeIPRange = getFakeIPRange();
		String thatFakeIPRange = that.getFakeIPRange();
		if (thisFakeIPRange == null) {
			if (thatFakeIPRange != null) {
			    return false;
			}
		} else if (!thisFakeIPRange.equals(thatFakeIPRange)) {
		    return false;
		}
		long thisMTU = getMTU();
		long thatMTU = that.getMTU();
		if (thisMTU != thatMTU) {
		    return false;
		}
		boolean thisEnableIPv6 = getEnableIPv6();
		boolean thatEnableIPv6 = that.getEnableIPv6();
		if (thisEnableIPv6 != thatEnableIPv6) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getTunFd(), getSocks5Server(), getFakeIPRange(), getMTU(), getEnableIPv6()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("Tun2socksStartOptions").append("{");
		b.append("TunFd:").append(getTunFd()).append(",");
		b.append("Socks5Server:").append(getSocks5Server()).append(",");
		b.append("FakeIPRange:").append(getFakeIPRange()).append(",");
		b.append("MTU:").append(getMTU()).append(",");
		b.append("EnableIPv6:").append(getEnableIPv6()).append(",");
		return b.append("}").toString();
	}
}

